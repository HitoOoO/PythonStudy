python 是一个动态强类型语言
弱类型语言 js php 等 1+‘1’ 会进行隐式的类型转换 而python 会直接报错 强类型语言不会进行隐式的类型转换
is 判断两个变量地址是否相同 == 判断两个值是否相同



python 2  vs python 3
python 3 中 print 变为内置函数
编码问题 python 2中默认的是字节  python 3 不再有unicode对象 默认str就是unicode
除法变法 python 2 会直接截断 返回一个整数 ， python 3 除号返回的是浮点数
python 3 新增类型注解，优化 super（）方便直接调用父类函

python 2 中 range(10)返回的是一个大列表 python 3中的range（）返回的是一个可迭代的对象
python 3 新增enum 枚举内置库
six 模块 提供一些语法兼容的工具 兼容python 2 到 python 3 2to3 等工具转换代码




可变和不可变对象
可变对象:list,set,dict
可不变对象: bool,int,float,tuple,str,frozenset


python *args **kwargs
用来处理可变参数
*args被打包成tuple对象  **kwargs 被打包成 dict


使用异常的常见类型
1.网络请求（超时，连接错误）
2.资源访问（权限问题，资源不存在）
3.代码逻辑（越界问题，keyerror等）


什么是Cpython GIL  全局解释器锁
Cpython 解释器的内存管理并不是线程安全的
保护多线程情况下对python 对象的访问
Cpython使用简单的锁机制避免多个线程同时执行字节码
GIL影响 限制了程序的多核执行
同一时间只能有一个线程执行字节码 cpu密集程序难以利用多核优势
IO期间会释放GIL ，对IO密集程序影响不大

如何规避GIL影响
cpu 密集可以使用多进程+进程池
IO 密集可以使用多线程/协程


剖析程序性能
二八定律 大部分时间耗时再少量的代码上
内置的profile/cprofile等工具
使用pyflame(uber开源）的火焰图工具

服务端性能优化
数据结构和算法
数据库层：索引优化，慢查询消除，批量操作减少IO，NoSQL
网络IO：批量操作，pipline操作，减少IO
使用缓存 内数据库
异步：asynico celery
并发：gevent/多线程

python 生成器与协程
生成器就是可以生成值的函数
当一个函数有了yield 关键字就成了生成器
生成器可以挂起执行并且保持当前执行的状态

python 单元测试 动态语言
针对程序模块进行正确性的检验
一个函数一个类进行验证
通常是自低向上保证程序的正确性
保证代码逻辑的正确性
单测影响设计，易测的代码往往是高内聚低耦合的
回归测试的时候，防止改一处整个服务不可用
相关的库
nose/pytest 较为常用
mock 模块用来模拟替换网络请求
coverage 统计测试的覆盖率

常用的内置算法与数据结构
sorted 排序
dict/list/set/tuple

dict 底层结构
dict 底层使用的是哈希表，为了支持快速查找使用了哈希表作为底层结构
Cpython 解释器使用二次探查解决哈希冲突问题

python list/tuple 区别
都是线性结构 支持下标访问
list是可变对象，tuple是不可变对象 保存的引用不可变
list 无法作为字典的key，tuple 可以作为（可变对象不可hash）

LRU cache 替换掉最近最少使用的对象
缓存剔除策略。当缓存空间不够用的时候需要一种方式剔除key
LRU 使用一个循环双端队列把最新的key 放到表头实现